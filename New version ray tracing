import pygame, pygame.gfxdraw, random, math
pygame.init()
screen = pygame.display.set_mode([800, 800])
center = (400, 200)
targetdist = 100
targetangle = 260
hit=False
bruh=True
clock = pygame.time.Clock()
while bruh==True:
    screen.fill((0, 0, 0))
    pointlist = [center]
    for x in range(-30, 31):
        y=targetangle+x
        hit=False
        currenttargetangle = targetangle+x
        targetposy = center[1]+(2 * math.sin(math.radians(y)) * targetdist)
        targetposx = center[0]+(2 * math.cos(math.radians(y)) * targetdist)

        xdisp=(targetposx-center[0])/targetdist
        ydisp = (targetposy - center[1]) / targetdist
        wall = pygame.draw.rect(screen, (255, 0, 0), [400 - 100, 50, 100, 100])
        wall1 = pygame.draw.rect(screen, (255, 0, 0), [300, 200, 50, 50])
        for y in range(targetdist):
            if wall.collidepoint((center[0]+xdisp*y),(center[1]+ydisp*y)) or wall1.collidepoint((center[0]+xdisp*y),(center[1]+ydisp*y)):
                pointlist.append(((center[0]+xdisp*y), (center[1]+ydisp*y)))
                hit=True
                print("Hit")
                break
        if hit!=True:
            pointlist.append((targetposx, targetposy))
            print("not hit")
    pygame.gfxdraw.filled_polygon(screen,pointlist,(255,255,0))
    targetangle -=1
    pygame.display.flip()
    clock.tick(600)
