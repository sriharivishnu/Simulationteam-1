import pygame, pygame.gfxdraw, random, math

pygame.init()
screen = pygame.display.set_mode([800, 800])
player1screen=pygame.Surface([800/2,800])
player2screen=player1screen
center = (200, 400)
targetdist = 100
targetangle = 260
hit=False
bruh=True
clock = pygame.time.Clock()
forward=False
down=False
left=False
right=False
pointlist = [center]
class wall(pygame.sprite.Sprite):
    def __init__(self,width,height,position):
        super().__init__()
        self.positionx=position[0]
        self.positiony=position[1]
        self.width=width
        self.height=height
        self.rect =pygame.draw.rect(player1screen, (255,0,0), (position[0], position[1], width, height))
    def cameramove(self,left,right,up,down):
        if left:
            self.positionx+=3
        elif right:
            self.positionx-=3
        if up:
            self.positiony+=3
        elif down:
            self.positiony-=3
    def update(self):
        self.rect = pygame.draw.rect(player1screen, (255, 255, 255),(self.positionx, self.positiony, self.width, self.height))


wallist=[]
wallist.append(wall(100,100,(100,100)))
wallist.append(wall(100,100,(200,200)))
wallslength=len(wallist)

while bruh==True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            bruh = False
        if event.type == pygame.MOUSEMOTION:
            if event.pos[0]-center[0] != 0:
                x = event.pos[1]-center[1]
                y = event.pos[0]-center[0]
                targetangle = math.degrees(math.atan(x/y))
                if x > 0 and y < 0 or x < 0 and y < 0:
                    targetangle += 180
        if event.type == pygame.KEYDOWN:

            if event.key == pygame.K_w:
                forward = True
            if event.key == pygame.K_s:
                down = True
            if event.key == pygame.K_a:
                left = True
            if event.key == pygame.K_d:
                right = True

        if event.type == pygame.KEYUP:
            if event.key == pygame.K_w:
                forward = False
            if event.key == pygame.K_s:
                down = False
            if event.key == pygame.K_a:
                left = False
            if event.key == pygame.K_d:
                right = False
    screen.blit(player1screen,(0,0))
    player1screen.fill((0, 0, 0))
    for x in range(len(wallist)):
        wallist[x].cameramove(left,right,forward,down)
        if 400>=wallist[x].positionx>=-100 and 800>=wallist[x].positiony>=-100:
            wallist[x].update()

    del pointlist[1:]
    for x in range(-30, 31,2):
        y=targetangle+x
        hit=False
        currenttargetangle = targetangle+x
        targetposy = center[1]+(2 * math.sin(math.radians(y)) * targetdist)
        targetposx = center[0]+(2 * math.cos(math.radians(y)) * targetdist)

        xdisp=(targetposx-center[0])/targetdist
        ydisp = (targetposy - center[1]) / targetdist

        for y in range(0,targetdist,1):
            for z in range(wallslength):
                if wallist[z].rect.collidepoint((center[0]+xdisp*y),(center[1]+ydisp*y)):
                    pointlist.append(((center[0] + xdisp * y), (center[1] + ydisp * y)))
                    hit=True
                    break
            if hit:
                break
        if hit!=True:
            pointlist.append((targetposx, targetposy))
    pygame.gfxdraw.filled_polygon(player1screen,pointlist,(255,255,0))
    pygame.display.flip()
    print(clock.get_fps())
    clock.tick(40)
